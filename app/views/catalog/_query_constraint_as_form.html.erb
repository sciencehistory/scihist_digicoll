<%#  query constraint as a live search box/form allowing you to change query,
     instead of just a label, and additional constraint for public-domain-only where
     appropriate %>

<form class="scihist-constraints-query applied-filter d-inline-block">
    <%# include all existing filters etc in the search that will be submitted
        with changed query text string, by using the component from Blacklight
        to include as hidden fields: %>
    <%= render Blacklight::HiddenSearchStateComponent.new(params: search_state.params_for_search.except(:q, :qt, :page, :utf8)) %>

    <div class="input-group input-group-sm">
      <div class="input-group-prepend">
        <span class="input-group-text"><i class="fa fa-search" aria-hidden="true"></i><span class="sr-only">Search</span></span>
      </div>

      <label class="sr-only" for="constraintsQueryInput">Query</label>
      <%= text_field_tag "q", local_assigns[:params].try { |h| h[:q] }, placeholder: "Search within results", class: "form-control", id: "constraintsQueryInput" %>

      <div class="input-group-append">
        <button class="btn btn-primary" title="Search within results" aria-label="Search within results">
          Go
        </button>
        <% if params[:q].present? %>
            <%= link_to(search_state.params_for_search.except(:q, :qt, :page, :utf8),  { class:"btn btn-primary remove", title:"Remove" }) do %>
              <span class="remove-icon">âœ–</span><span class="sr-only">Remove query constraint <%= params[:q] %></span>
            <% end %>
        <% end %>
      </div>
    </div>
</form>

<% if SearchBuilder::PublicDomainFilter.filtered_public_domain?(local_assigns[:params]) %>
  <%= render_constraint_element(nil, "Only public domain", remove: search_state.params_for_search.except(:filter_public_domain, :page, :utf8)) %>
<% end %>
