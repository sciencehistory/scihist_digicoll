<%# all the work form fields EXCEPT title and representative_id.
    So we can re-use them in batch create.

    Must pass in local `f` with kithe form builder
%>

    <%=  f.repeatable_attr_input :additional_title, build: :at_least_one  %>

    <%= f.repeatable_attr_input(:external_id, build: :at_least_one) do |sub_form| %>
      <%= category_and_value(sub_form, category_list: Work::ExternalId::CATEGORY_VALUES) %>
    <% end %>

    <%= f.repeatable_attr_input(:creator, build: :at_least_one) do |sub_form| %>
      <%= category_and_value(sub_form, category_list: Work::Creator::CATEGORY_VALUES,
            input_data_attributes: { "scihist-qa-autocomplete" => qa_search_vocab_path("assign_fast", "all")}) %>
    <% end %>

    <%= f.repeatable_attr_input(:date_of_work, build: :at_least_one, simple_form_input_args: { required: (true if f.object.published?) }) do |sub_form| %>
      <%= render "date_of_work", f: sub_form %>
    <% end %>

    <%= f.repeatable_attr_input(:place, build: :at_least_one) do |sub_form| %>
      <%= category_and_value(sub_form, category_list: Work::Place::CATEGORY_VALUES,
            input_data_attributes: { "scihist-qa-autocomplete" => qa_search_vocab_path("assign_fast", "all")}) %>
    <% end %>

    <%= f.input :format,
                collection: (Work::ControlledLists::FORMAT.collect do |v|
                  [Work.human_attribute_name("format.#{v}"), v]
                end),
                as: :check_boxes,
                input_html: { multiple: true, size: Work::ControlledLists::FORMAT.count  },
                required: (true if f.object.published?),
                include_blank: false %>

    <%= f.repeatable_attr_input :genre, build: :at_least_one, simple_form_input_args: { required: (true if f.object.published?) } do |input_name, value| %>
        <%= f.input_field :genre, selected: value, include_blank: true, id: nil,
          collection: Work::ControlledLists::GENRE,
          name: input_name,
          class: "form-control input-primitive" %>
    <% end %>


    <%= f.repeatable_attr_input :medium, build: :at_least_one,
          html_attributes: {
            data: {
              "scihist-qa-autocomplete" => qa_search_vocab_path("getty", "aat")
            }
          }
    %>

    <%= f.repeatable_attr_input :extent, build: :at_least_one %>

    <%= f.repeatable_attr_input :language, build: :at_least_one,
      html_attributes: { "data-scihist-qa-autocomplete" => qa_search_vocab_path("local", "languages")} %>

    <%# text_extraction does need to be in this form, so that we can include it in batch edits. %>
    <%= f.input :text_extraction_mode, label: "Text extraction mode (OCR or PDF)",
          collection: {"-none-" => "", "OCR" => "ocr", "PDF extraction" => "pdf_extraction"},
          as: :radio_buttons %>

    <%= f.input :description,       as: :text, input_html: { rows: 14 } %>
    <%= f.input :provenance,        as: :text, input_html: { rows: 5 }  %>

    <%= f.repeatable_attr_input(:inscription, build: :at_least_one) do |sub_form| %>
      <%= sub_form.input :location, wrapper: :scihist_horizontal_form %>
      <%= sub_form.input :text, wrapper: :scihist_horizontal_form %>
    <% end %>

    <%= f.repeatable_attr_input :subject, build: :at_least_one,
          html_attributes: { "data-scihist-qa-autocomplete" => qa_search_vocab_path("assign_fast", "all") } %>

    <%= f.input :department, required: (true if f.object.published?), collection: Work::ControlledLists::DEPARTMENT  %>

    <%= f.repeatable_attr_input :series_arrangement, build: :at_least_one %>

    <%# single, not array, so we need some slightly weird setup. Including we need at least one to exist:  %>
    <% f.object.build_physical_container unless f.object.physical_container.present? %>
    <%= f.input :physical_container, wrapper: :vertical_form do |sub_form| %>
      <% f.fields_for :physical_container do |sub_form| %>
        <%= render "physical_container", f: sub_form %>
      <% end %>
    <% end %>

    <%= f.repeatable_attr_input(:related_link, build: :at_least_one) do |sub_form| %>
      <%= sub_form.input :category,
            collection: vocab_collection_options(model: sub_form.object,
                                                 attribute_name: :category,
                                                 value_list: RelatedLink::CATEGORY_VALUES),
            include_blank: false,
            wrapper: :scihist_horizontal_form %>
      <%= sub_form.input :url, wrapper: :scihist_horizontal_form %>
      <%= sub_form.input :label, wrapper: :scihist_horizontal_form %>
    <% end %>


    <%= f.input :rights, required: (true if f.object.published?), collection: RightsTerm.collection_for_select %>

    <%= f.input :rights_holder %>

    <%= f.repeatable_attr_input :additional_credit, build: :at_least_one do |sub_form| %>
      <div class="form-row">
        <div class="col-left">
          <%= sub_form.input :role, label: false,
            collection: Work::AdditionalCredit::ROLES,
            label_method: proc { |id| Work::AdditionalCredit.human_attribute_name("role.#{id}") }
           %>
        </div>
        <div class="col-sm">
          <%= sub_form.input :name, label: false, collection: Work::AdditionalCredit::NAMES %>
        </div>
      </div>
    <% end %>

    <%= f.input :digitization_funder %>

    <%= f.input :file_creator, collection: Work::ControlledLists::FILE_CREATOR %>

    <%= f.repeatable_attr_input(:admin_note, build: :at_least_one) do |input_name, value| %>
      <div class="form-group">
        <%= f.input_field :admin_note, name: input_name, value: value, as: :text, class: "form-control", rows: 4 %>
      </div>
    <% end %>

    <%= f.association :contained_by, collection: Collection.all.to_a.sort_by { |c| c.title.downcase }, input_html: { "data-tom-select": "true "} %>
