<% content_for(:head) do %>
  <script src="<%= cf_turnstile_js_url %>" async defer></script>
  <meta name="robots" content="noindex">
<% end %>


<h1 class="brand-alt-h1 mb-4">Traffic control and bot detection...</h2>

<div
  class="cf-turnstile"
  data-sitekey="<%= cf_turnstile_sitekey %>"
  data-callback="turnstileCallback"
></div>

<noscript>
  <div class="alert alert-danger">Sorry, Javascript is required to be enabled for our traffic check, and does not appear available.</div>
</noscript>

<p class="mt-2">We are happy to share our data and content, but poorly behaving bot traffic volume was causing us problems. If you would like to use our content or data, please <a href="mailto:digital@sciencehistory.org">get in touch</a>, and/or see our information on <a href="https://digital.sciencehistory.org/api_docs">API and Machine Access</a>.</p>

<script type="text/javascript">
  async function turnstileCallback(token) {
    // I don't know if we should be disabling CSRF for this one, but we'll just use it
    const csrfToken = document.querySelector("[name='csrf-token']");

    const response = await fetch('<%= bot_detect_challenge_path %>', {
      method: 'POST',
      headers: {
        "X-CSRF-Token": csrfToken?.content,
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ cf_turnstile_response: token }),
    });

    result = await response.json();
    if (result["success"]) {
      const dest = new URLSearchParams(window.location.search).get("dest");
      // For security make sure it only has path and on
      if (!dest.startsWith("/") || dest.startsWith("//")) {
        throw new Error("illegal non-local redirect: " + dest);
      }
      // replace the challenge page in history
      window.location.replace(dest);
    } else {
      // error message?
    }
    //todo catch JS errors too
  }
</script>
