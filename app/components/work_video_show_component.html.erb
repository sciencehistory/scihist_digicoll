<%# note this re-uses classes from standard work_image_show_component %>

<% provide :page_title, construct_page_title(work.title) %>

<% content_for :head do %>
  <%= render "works/meta_tags", work: work  %>

<% end %>

<%# try to include microdata for schema.org video object, including marking up transcript text
    https://linkilo.co/blog/are-video-transcripts-a-seo-ranking-factor/ %>

<div class="video-show-page-layout work-show" itemscope itemtype="http://schema.org/VideoObject" class="row">
  <%# uploadDate REQUIRED by google for VideoObject, don't know why %>
  <%= tag.meta itemprop: "uploadDate", content: work.published_at.iso8601 %>

  <% if video_asset&.file_metadata&.has_key?("duration_seconds") %>
    <%=
        # schema.org 'duration' requires ISO8601 duration which looks like `PTnHnMnS`

        seconds = video_asset.file_metadata["duration_seconds"]
        tag.meta itemprop: "duration",
          content: ActiveSupport::Duration.build(
                      seconds
                    ).iso8601(precision: (seconds % 1 == 0 ? 0 : 3))
    %>
  <% end %>
  <%= tag.meta itemprop: "thumbnailUrl", content: WorkSocialShareAttributes.new(work, view_context: view_context).share_media_url %>


  <div class="show-title">
    <%= render WorkTitleAndDatesComponent.new(work) %>
  </div>

  <div class="show-video">
    <div class="video-player">
      <% if video_asset.present? %>
        <div class="position-relative vjs-theme-scihist-wrapper">
          <% if ! video_asset.published? %>
            <%= private_label %>
          <% end %>

          <%= content_tag("video",
                  id: "work-video-player",
                  # normalise-time-controls: https://github.com/videojs/video.js/pull/8833
                  class: "video-js vjs-fluid vjs-big-play-centered vjs-theme-scihist vjs-normalise-time-controls",
                  playsinline: true, # https://developer.apple.com/documentation/webkit/delivering-video-content-for-safari#Enable-Inline-Video-Playback
                  controls: true,
                  preload: "metadata",
                  poster: poster_src,
                  style: "aspect-ratio: #{video_asset.width }/#{ video_asset.height };",
                  # the data-setup with serialized json triggers video.js
                  data: {
                    setup: {
                      inactivityTimeout: 1400, # shorter than 2000ms default. youtube actually does 0.
                      controlBar: {
                        # custom children list to move volume to right, and remove remaining time.
                        # Started from:
                        # https://github.com/videojs/video.js/blob/09eb7150453bb2cbd96e638be3e115590ae98578/src/js/control-bar/control-bar.js#L56-L76
                        children: [
                          'playToggle',
                          'skipBackward',
                          'skipForward',
                          'currentTimeDisplay',
                          'timeDivider',
                          'durationDisplay',
                          'progressControl',
                          'liveDisplay',
                          'seekToLive',
                          #'remainingTimeDisplay',
                          'customControlSpacer',
                          'volumePanel',
                          'playbackRateMenuButton',
                          'chaptersButton',
                          'descriptionsButton',
                          'subsCapsButton',
                          'audioTrackButton',
                          'pictureInPictureToggle',
                          'fullscreenToggle'
                        ],
                        skipButtons: {
                          # seconds. only 5, 10, and 30 are supported by video.js
                          forward: 30,
                          backward: 10
                        },
                        volumePanel: {
                          inline: false
                        },
                        durationDisplay: true
                      },
                      aspectRatio: "#{video_asset.width}:#{video_asset.height}"
                    }.to_json
                  }
          ) do %>
            <% if video_asset.hls_playlist_file.present? %>
              <%= tag "source", src: video_asset.hls_playlist_file.url, type: "application/x-mpegURL" %>
            <% else %>
              <%= tag "source", src: video_src_url, type: video_asset.content_type %>
            <% end %>

            <% if auto_caption_track_url %>
              <%= tag "track", id: "scihistAutoCaptions", src: auto_caption_track_url, label: "Auto-captions", kind: "captions" %>
            <% end %>

            <p class="vjs-no-js">
              To view this video please enable JavaScript, and consider upgrading to a
              web browser that
              <a href="https://videojs.com/html5-video-support/" target="_blank"
                >supports HTML5 video</a
              >
            </p>


          <% end %>
        </div>
      <% else %> <%# no video file available %>
        <%= tag "img", src: asset_path("placeholderbox.svg", alt: "") %>
      <% end %>
    </div>

    <%= render "works/rights_and_social", work: work %>

    <% if has_vtt_transcript? %>
      <div class="transcript-toggle">
        <%# href leads to separate page with transcript, that we hope google will follow, but don't expect users to,
            although they can with eg "open in new tab". Normally data-bs-target will be used by Bootstrap collapse JS
            to open box on page with transcript instead %>
        <a href="<%= asset_transcript_path(video_asset) %>" data-bs-target="#show-video-transcript-collapse" id="showVideoTranscriptToggle" class="btn btn-lg btn-brand-main" type="button" data-bs-toggle="collapse"  aria-expanded="false" aria-controls="show-video-transcript" data-show-label="Show transcript" data-hide-label="Hide transcript">
          Show transcript
        </a>

        <p class="alert alert-warning mt-3">
          <%= t("transcript.asr_warning_html") %>
        </p>
      </div>
    <% end %>
  </div>

  <% if has_vtt_transcript? %>
    <div class="collapse" id="show-video-transcript-collapse">
      <div class="show-video-transcript mb-4">
        <div class="show-video-transcript-heading">
          <h2 class="h3">Transcript</h2>
          <button type="button" class="btn-close" aria-label="Close" data-bs-toggle="collapse" data-bs-target="#show-video-transcript-collapse" aria-expanded="true">
          </button>
        </div>


        <div class="show-video-transcript-content" data-transcript-content-target itemprop="transcript">
          <%= render OralHistory::VttTranscriptComponent.new(OralHistoryContent::OhmsXml::VttTranscript.new(vtt_transcript_str)) %>
        </div>
      </div>
    </div>
  <% end %>

  <div class="show-metadata">
    <div class="work-description" itemprop="description">
      <%= DescriptionDisplayFormatter.new(work.description).format  %>
    </div>

    <%= render WorkShowInfoComponent.new(work: work) %>

    <%= render "works/citation", work: work  %>
  </div>
</div>

