/*
    The image viewer is a collection of nested flex divs -- inside a bootstrap
    modal which has CSS overridden to be full-screen

    #scihist-image-viewer-modal .modal
      .modal-dialog
        .modal-content
          .modal-body // this and above is standard bootstrap markup for modal

            .scihist-image-viewer
              .viewer-header
              .viewer-content
                .viewer-image-and-navbar // to keep image and navbar together whether thumbs are on bottom or side
                  .viewer-image
                  .viewer-navbar
                .viewer-thumbs

    Divs that are in the middle of the hieararchy might be flex-items and
    have CSS properties relevant to that, AND be `display:flex` for their
    contents and have CSS properties relevant to that too.
*/

$scihist_image_viewer_thumb_width: 54px; // Needs to match ImageServiceHelper::THUMB_BASE_WIDHTS[:mini]



// Override some bootstrap modal stuff with some hacks to give us a full-viewport modal
#scihist-image-viewer-modal {
  .modal-dialog {
    position: fixed;
    height: 100%;
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
    border: 0;
  }

  // not sure why we need to repeat all this from .modal-dialog above, but
  // we seem to need both. In part to deal with 100vh not working right on
  // Android and some other mobile browsers.
  // https://stackoverflow.com/questions/52848856/100vh-height-when-address-bar-is-shown-chrome-mobile
  .scihist-image-viewer {
    position: fixed;
    height: 100%;
    width: 100%;
    max-width: 100%;
    margin: 0;
    padding: 0;
    border: 0;
  }

  .modal-body {
    margin: 0;
    padding: 0;
    border: 0;
  }

  // custom slide-up animation on open, no fade.
  .modal-dialog {
    top: 100vh;
    bottom: 200vh;
    transition-property: top, bottom;
    transition-duration: .25s;
    transition-timing-function: ease-out;
  }
  &.show .modal-dialog {
    top: 0;
    bottom: 100vh;
  }
}

// TEMPORARY hide search entirely on small screens
// Needs to correspond to same place viewer nav goes vertical below
@media (max-width: 767px) {
  .work-page-viewer-search-controls {
    display: none !important;
  }
 .scihist-image-viewer {
    .viewer-search-area, .viewer-search-open {
      display: none !important;
    }
  }
}

// Now styles for our actual viewer, which happens to be inside a bootstrap modal.
.scihist-image-viewer {
  background-color: $body-bg;

  display: flex;
  flex-direction: column;

  .viewer-alert {
    position: absolute;
    z-index: 10;
    right: 0.5rem;
    top: 0.5rem;
  }

  .viewer-header {
    flex-shrink: 0;
    background-color: $dark;
    color: white;
    a {
      color: white;
      &:hover {
        color: white;
        text-decoration-color: $shi-red;
      }
    }

    display: flex;
    align-items: center;
    padding: 4px 15px 4px 0; // icon is meant to butt against edge

    .scihist-logo {
      width: 40px;
      position: relative;
      top: -4px;
    }

    h1 {
      flex-grow: 1;

      padding: 0;
      margin: 0 15px;

      font-size: $h3-font-size;
      line-height: normal;
      overflow: hidden;

      a {
        display: block;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    }
    .header-close {
      color: white;
      font-size: $h3-font-size;
    }
  }

  .viewer-content {
    // as a mmeber of it's container flex
    flex-grow: 1;

    // and a flex itself with content
    display: flex;
    flex-direction: column;
  }


  .viewer-search-open {
    z-index: 1000;
    position: absolute;
    top: 0.5rem;
    left: 0.5rem;
  }


  .viewer-search-area {
    --search-area-width: 16rem;
    --slide-duration: 0.5s;

    border-right: 2px solid $dark;
    width: var(--search-area-width);
    display: flex;
    flex-direction: column;

    // originally hidden, in a weird way we can animate as slide-in, even in flex
    flex-shrink: 0;
    flex-grow: 0;
    box-sizing: border-box;
    margin-left: calc(-1 * var(--search-area-width));
    transition: margin var(--slide-duration);

    // For accessibility purposes, it's important we visibility:hidden when off screen
    // We'll need to use JS to make visible after animation
    // https://knowbility.org/blog/2020/accessible-slide-menus
    visibility: hidden;
    &.slid-in {
      margin-left: 0;
    }
    &.drawer-visible {
      visibility: visible;
    }


    .viewer-search-controls {
      padding: $paragraph-spacer;
      flex-grow: 0;
    }

    .search-results-container {
      padding: 0 ($paragraph-spacer * 0.5) $paragraph-spacer ($paragraph-spacer * 0.5);
      flex-grow: 1;
      overflow-y: scroll;
      overflow-x: hidden;
    }

    .viewer-results-loading {
      width: 100%;
      height: 3rem;
      background: url('@/images/spinner.svg') no-repeat center;
      background-size: contain;
    }

    .result {
      color: $body-color;
      display: block;
      // padding so highlighted background will include it
      padding: $paragraph-spacer ($paragraph-spacer * 0.5);
      // invisible border so adding a border for current doens't change size
      border: 1px solid transparent;

      mark {
        background-color: $shi-red-1;
      }

      &.current-viewer-result {
        border: 1px solid $body-color;
        background-color: $shi-chartreuse-2;
      }
    }
  }

  .viewer-search-highlight {
    background-color: $shi-red;
    opacity: 0.35;
  }

  // the single actually selected one gets an outline and an initial blink animation
  .selected-search-highlight {
    outline: solid 4px $shi-green-4;
    outline-offset: 3px;
    animation: highlight-flash 0.7s ease-in-out;
  }

  @keyframes highlight-flash {
    0% { opacity: 0.35; outline-style: none; }
    40% { opacity: 0; }
    70% { opacity: .5; outline-style: solid; }
    85% { opacity: 0; }
    100% { opacity: .35; }
  }

  .viewer-image-and-navbar {
    position: relative;

    // https://css-tricks.com/flexbox-truncated-text/
    min-width: 0;
    width: 100vw; // important to keep long child texts from overflowing on IE11
    // as a member of it's container flex
    flex-grow: 1;

    // as a flex itself with content
    display: flex;
    flex-direction: column;

    // the actual button link is full screen height for click target,
    // but you can only see the <i> centered inside it. styles copied/adapted
    // from bootstrap3 button-variant mixin, but only applying to <i> inside.
    .viewer-image-next, .viewer-image-prev {
      display: block;
      z-index: 1; // above OSD canvas
      position: absolute;
      height: 100%;
      cursor: pointer;
      border: 0 none;
      background: transparent;
      padding: 0;

      &:focus {
        outline: 0;
        i {
          // copied from what used to be tab-focus mixin in bootstrap3, I dunno
          // but it's how it looked in chf_sufia and how we want.
          outline: 5px auto -webkit-focus-ring-color;
          outline-offset: -2px;
        }
      }

      &:hover {
        i {
          background-color: transparentize($shi-yellow, 0.2);
          border-color: #212529; // darken($shi-yellow, 12%);
          color: #212529;
        }
      }

      & > i {
        font-size: 1.5625rem; // ~20px
        padding: 0.5rem 0.75rem;
        background-color: transparentize($dark, .3);
        border: 1px solid transparent;
        border-radius: 40rem; // make a circle
        color: white;
        margin: 0 3px;
      }
    }
    .viewer-image-next {
      right: 0;
      & > i {
        padding-right: 9px;
      }
    }

    .viewer-image-prev {
      left: 0;
      & > i {
        padding-left: 9px;
      }
    }

    .viewer-image {
      flex-grow: 1;
      // to be a anchor point for openseadragon viewer inside
      position: relative;
    }

    .viewer-image-loading {
      position: absolute;
      height: 100%;
      width: 100%;
      z-index: 10000;
      background: url('@/images/spinner.svg') no-repeat center;
      background-size: 25vw
    }

    // will show at larger sizes
    .viewer-navbar-label {
      display: none;
    }

    .viewer-navbar {
      // bootstrap btn-justified doens't seem to be working, and flex is
      // more powerful anyway.
      display: flex;

      // We want to go against bootstrap's insistence, and get rid of the caret
      .dropdown-toggle:after {
        display: none;
      }

      .viewer-navbar-btn {
        max-width: 440px;
        flex-grow: 2;
        button {
          text-transform: uppercase;
        }
      }
      .viewer-thin-btn {
        flex-grow: 0;
      }
      .btn-group .btn {
        width: 100%;
      }
      .viewer-pagination {
        flex-grow: 0;

        background-color: $dark;
        color: white;

        font-weight: $btn-font-weight;
        text-align: center;
        vertical-align: middle;
        @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, 0);

        white-space: nowrap;
      }
      .viewer-member-info {
        @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $btn-font-size-lg, $btn-line-height-lg, 0);
        border: 1px solid $primary;
        flex-grow: 4;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        text-align: left;

        text-transform: uppercase;
      }
      .viewer-spacer {
        width: 0;
        flex-grow: 1;
        background-color: $dark;
      }
      .viewer-keyboard {
        kbd {
          white-space: nowrap;
        }
        .table {
          margin-bottom: 0;
        }
        .dropdown-menu {
          left: auto;
          right: 5px;

          min-width: 280px;
          padding: 5px;

          h3 {
            margin-top: 0;
            text-align: center;
          }
        }
      }
    }
  }



  // single row with horizontal scrolling
  .viewer-thumbs {
    white-space: nowrap;
    overflow-x: auto;
    background-color: $dark;
    padding: 7px;

    .viewer-thumb {
      display: inline-block; // makes FF respect width on unloaded image, not sure why needed
      box-sizing: content-box;
      background: transparent;
      width: $scihist_image_viewer_thumb_width;
      position: relative; // for overlay

      cursor: pointer;

      margin: 5px;
      border: 0;
      padding: 0;

      // Add an outline around current displayed thumb -- we add it over img
      // inside of button, so that browser focus overlay for keyboard nav accessibility
      // can still show on button itself over on top. (Although I dunno how visible it really is...)
      &.viewer-thumb-selected img {
        outline: 4px solid $shi-yellow;
        outline-offset: 2px;
      }

      // Add semi-transparent overlay over current displayed thumb
      &.viewer-thumb-selected:before {
        content: " ";
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;

        background-color: rgba($shi-chartreuse-2, 0.7);
      }

      img {
        width: 100%;
      }

      img.lazyload, img.lazyloading, img.lazyloaded {
        background: $brand-image-placeholder-color url('@/images/static-progress.svg') no-repeat;
        background-size: 34px 34px;
        background-clip: content-box;
        background-position: center center;
      }
    }

    // data-search-result-count attr indicates search results to show
    .viewer-thumb[data-search-result-count] {
      &:after {
        content: attr(data-search-result-count);

        position: absolute;
        //min-width: 56%;
        top: 50%;
        left: 50%;
        transform: translateX(-50%) translateY(-50%);

        background-color: rgba($shi-red-1, 0.9);
        border: 1px solid $shi-red-2;

        color: $body-color;
        font-weight: bold;
        text-align: center;
        font-size: $scihist_image_viewer_thumb_width * 0.4;
        padding: 0 0.5em;
      }
    }
  }

  @media (max-width: 500px) {
    // On small screens, which are probably touch anyway, save space by
    // hiding some non-essential toolbar buttons.
    .viewer-navbar-btn.viewer-keyboard, .viewer-navbar-btn.viewer-zoom-fit,
    .viewer-navbar-btn.viewer-fullscreen, .viewer-navbar-btn.viewer-rotate-right {
      display: none !important;
    }
  }

  // At larger screen sizes, thumbs go to a sidebar with multiple columns
  @media (min-width: 768px) {
    // sorry the selectors get crazy unpredictable to ensure specificity
    // for override. needs refactor.

    .viewer-content {
      flex-direction: row;
      // don't totally understand this, but it gets our flex-in-flex layout
      // right on FF, without the thumbs overflowing their bounding.
      // https://bugzilla.mozilla.org/show_bug.cgi?id=1108514
      min-height: 0;
    }

    .viewer-thumbs {
      padding-top: 0;
      max-height: 100%; // IE 11 needs this, although others don't, i dunno.

      white-space: normal;
      overflow-y: auto;
      overflow-x: hidden;
      // 20px, need to leave enough room for scroll-bar on browsers that count that inside
      width: calc(#{$scihist_image_viewer_thumb_width} * 2 + 7px * 3 + 22px);
      text-align: center;
      flex-shrink: 0;

      // If thumb image is very vertical aspect ratio, clip it to 1:2
      .viewer-thumb img {
        object-fit: cover;
        object-position: 0 0;
        max-height: $scihist_image_viewer_thumb_width * 2;
        overflow: hidden;
      }
    }
    .viewer-download {
      flex-grow: 0;
    }
    .viewer-image-and-navbar .viewer-navbar-label {
      display: inline;
    }
  }
}
