// video.js styles from the video.js node-modules package, how to do this may change
// in sass upgrades....
@import 'video.js/dist/video-js.css';

// The video.js player can play audio-only, even from an audio tag --
// but by default with a big static poster image etc. This is a custom
// style for a more standard audio controls only control bar.
//
// Adapted from this SO comment and other stuff in this SO question:
// https://github.com/videojs/video.js/issues/2777#issuecomment-161912138
//
// With some customizations.
//
// This markup is intended for the <audio> tag set up as in our local
// AudioPlayerComponent.
//
.video-js.scihist-video-js-audio-no-poster {
    // make sure video.js popup menus are above navbar items
    z-index: 1;

    // The default font size was 11px, makes numeric text hard to read
    // and buttons small targets for touch. this is a lot more readable and
    // visible for a control-bar only display and works in our layout.
    // video.js CSS was nice enough to adapt all around when we do this.
    font-size: 14px;

    /* Reset the height of the player to the height of the control bar, set
    to 3em exactly by video.js default theme */
    height: 3em;

    // at scihist, we want width to expand to available space,
    // like browser native audio players do
    width: 100%;

    /* Big player button can be disabled in config, but in case we missed it there,
       hide it for real here. There's no room for it, just a control bar! */
    .vjs-big-play-button {
      display: none;
    }

    /* Make the controlbar visible always/initially even before playing */
    .vjs-control-bar {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
    }

    // Show time elapsed/total time -- video.js default theme hides by default via
    // CSS, but it's in most standard html5 audio palyers -- and for OH important
    // for references, knowing where you are in transcript, etc. We customize
    // things further in the setup for the player itself.
    .vjs-time-control {
      display: block;
    }

    // We like how it looks with some rounded corners
    border-radius: 3em;
    .vjs-control-bar {
      border-radius: 3em;
    }

    // Popup menus are transparent in video.js, but in an audio-only context
    // where they are over page content not a video/poster, this is not helpful.
    // Make them opaque.
    .vjs-volume-vertical, .vjs-menu-button-popup .vjs-menu .vjs-menu-content {
      background-color: #2B333F;
      border: 1px solid #2B333F;
    }

    // And for those menus above, we don't have a video/poster image above,
    // make popups go down instead of  up, avoid a problem in our fixed navbar.
    .vjs-menu-button-popup .vjs-menu .vjs-menu-content {
      bottom: unset;
      top: calc(1.5em + 1px);
    }
    .vjs-volume-vertical {
      bottom: unset;
      top: calc(3em + 1px);
    }


    // When mouse hover over progress bar, there's a current time tooltip and a
    // where-you're-hovering tooltip, but it seems to a bug/misdesign which
    // one is on top, let's fix to put the mouse-position on on top:
    .vjs-progress-control .vjs-mouse-display {
      z-index: 2;
    }

    // on small screens, we'll just hide many of the elements. Somewhat
    // based on https://github.com/videojs/video.js/blob/f16d73b52840452f217722fc6ee7f9f51ba57cb2/src/css/components/_adaptive.scss
    // but for our actual screen size (we have a button next to video.js audio), and
    // using a media query (why doesn't video.js? Weird)
    @media only screen and (max-width: 44rem) {
      .vjs-time-divider,
      .vjs-duration,
      .vjs-remaining-time,
      .vjs-playback-rate,
      .vjs-volume-control,
      .vjs-seek-button {
        display: none;
      }
      .vjs-current-time {
        padding-left: 0;
      }
    }
    @media only screen and (max-width: 380px) {
      .vjs-current-time {
        display: none;
      }
    }
    @media only screen and (max-width: 300px) {
      .vjs-progress-control {
        display: none;
      }
    }
}


// Custom theme making controls larger, and putting "scrubber" bar on
// top, full-width.
//
// Inspired in part by ramp theme, https://github.com/samvera-labs/ramp/blob/23aae5c5aa9e7c95d1c94cba5cf870daf76df1aa/src/components/MediaPlayer/VideoJS/videojs-theme.scss
//
// Which was itself based on video.js "city" theme. https://github.com/videojs/themes/blob/master/city/index.css

.vjs-theme-scihist {
  .vjs-control-bar {
    font-size: 120%;
    height: 4em;
    padding-top: 1em;
    display: flex;
  }

  .vjs-control {
    width: 3.5em; // instead of 4em, with bigger font-size don't need it
  }

  // move scrubber up on top
  .vjs-progress-control {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    width: 100%;
    font-size: 200%;
  }

  .vjs-progress-control .vjs-progress-holder {
    position: absolute;
    top: 0;
    right: 0;
    left: 0;
    width: 100%;
    margin: 0;
  }

  // How high should it be? Yes this is an odd way to do it, worked
  // best of what I tried.
  .vjs-progress-control, .vjs-progress-holder, .vjs-play-progress {
    height: 0.5em;
  }

  // Keep scurbber from getting bigger on hover, distracting and unneeded
  // when it's on top
  .vjs-progress-control:hover .vjs-progress-holder {
    font-size: unset;
  }

  // This is the big circle current time indicator itself, this tweak
  // aligns it properly vertically with our fatter bar. Should be a better way?
  .vjs-play-progress::before {
    top: 0.1em;
  }

  // Custom theme color
  .vjs-play-progress {
    background-color: #78712e;
  }

  // Make font bigger in time display
  .vjs-control-bar .vjs-time-control {
    width: auto;
    font-size: 120%;
    line-height: 2.7em; // not sure, but works
    flex-grow: 2; // take up extra space
    text-align: left;
  }

  // Fix subtitles for control bar

  // 1.5 em is differnece in size of our custom control bar (4em + 1 em padding == 5em, plus 0.5em progress controls == 5.5em?), and
  // default videojs control bar (3em), negative. - 2.5em.
  //
  // Moves text tracks out of way of control bar. Class below will reset it to not be out of the way when control bar is not
  // visible, using same technique as default video.js.
  // See https://github.com/videojs/video.js/discussions/9050 and https://github.com/videojs/video.js/blob/09eb7150453bb2cbd96e638be3e115590ae98578/src/css/components/_text-track.scss#L2-L20

  .vjs-text-track-display {
    transform: translateY(-2.5em);
  }

  // Move captions down when controls aren't being shown
  &.vjs-controls-disabled .vjs-text-track-display,
  &.vjs-user-inactive.vjs-playing .vjs-text-track-display {
    transform: translateY(0);
  }
}
